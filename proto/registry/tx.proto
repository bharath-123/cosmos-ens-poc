syntax = "proto3";
package cns.registry;

import "registry/recordmap.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "cns/x/registry/types";

// Msg defines the Msg service.
service Msg {
      rpc RegisterRecord(MsgRegisterRecord) returns (MsgRegisterRecordResponse);
  rpc CreateRecordmap(MsgCreateRecordmap) returns (MsgCreateRecordmapResponse);
  rpc UpdateRecordmap(MsgUpdateRecordmap) returns (MsgUpdateRecordmapResponse);
  rpc DeleteRecordmap(MsgDeleteRecordmap) returns (MsgDeleteRecordmapResponse);
  rpc SendRecordBroadcast(MsgSendRecordBroadcast) returns (MsgSendRecordBroadcastResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgRegisterRecord {
  string creator = 1;
  string chain = 2;
  string address = 3;
}

message MsgRegisterRecordResponse {
}

message MsgCreateRecordmap {
  string creator = 1;
  string index = 2;

  string chain = 3;
  string address = 4;
}
message MsgCreateRecordmapResponse {}

message MsgUpdateRecordmap {
  string creator = 1;
  string index = 2;

  string chain = 3;
  string address = 4;
}
message MsgUpdateRecordmapResponse {}

message MsgDeleteRecordmap {
  string creator = 1;
  string index = 2;
}
message MsgDeleteRecordmapResponse {}

message MsgSendRecordBroadcast {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string userAddress = 5;
  string chain = 6;
  string chainAddress = 7;
}

message MsgSendRecordBroadcastResponse {
}
// this line is used by starport scaffolding # proto/tx/message
